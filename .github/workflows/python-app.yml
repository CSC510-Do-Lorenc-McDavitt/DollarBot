# This workflow will install Python dependencies, run tests and lint, and check for code coverage with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ main, "feature/*", "*" ]
  pull_request:
    branches: [ main, "feature/*", "*" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install pylint
      run: |
        pip install pylint
    - name: Run pylint
      run: |
        pylint -r y code/ || true
    - name: Test with Pytest & Coverage
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
        OPENAI_TOKEN: ${{ secrets.OPENAI_KEY }}
      run: |
        pip install pytest
        echo api_token=$API_TOKEN >> user.properties
        echo openai_key=$OPENAI_TOKEN >> user.properties
        pytest test/ --cov=. --cov-report=xml     
    - name: Upload coverage reports to Codecov
      if: always()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
